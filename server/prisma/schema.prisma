generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              String          @id @unique @default(uuid())
  username        String          @unique
  password        String
  skillLvl        String
  createdRecipes  Recipe[]
  savedRecipes    SavedOnUsers[]
  recipesReviewed RecipeReviews[]
}

model Recipe {
  id           String                 @id @unique @default(uuid())
  name         String
  servings     Int
  instructions String
  imageUrl     String
  cookingTime  Int
  skillLvl     String
  avgScore     Float
  totalScore   Int
  numReview    Int
  authorId     String
  ingredients  IngredientsOnRecipes[]
  author       User                   @relation(fields: [authorId], references: [id])
  savedBy      SavedOnUsers[]
  reviewedBy   RecipeReviews[]

  @@index([authorId])
}

model Ingredient {
  id                        String                 @id @unique
  recipesThatHaveIngredient IngredientsOnRecipes[]
}

model IngredientsOnRecipes {
  recipeId     String
  ingredientId String
  quantity     String
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])

  @@id([recipeId, ingredientId])
  @@index([recipeId])
  @@index([ingredientId])
}

model SavedOnUsers {
  savedById String
  recipeId  String
  savedBy   User   @relation(fields: [savedById], references: [id])
  recipe    Recipe @relation(fields: [recipeId], references: [id])

  @@id([savedById, recipeId])
  @@index([savedById])
  @@index([recipeId])
}

model RecipeReviews {
  createdAt    DateTime @default(now())
  reviewedById String
  recipeId     String
  score        Int
  review       String
  reviewedBy   User     @relation(fields: [reviewedById], references: [username])
  recipe       Recipe   @relation(fields: [recipeId], references: [id])

  @@id([reviewedById, recipeId])
  @@index([reviewedById])
  @@index([recipeId])
}
